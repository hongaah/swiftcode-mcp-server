import t from"node:https";import r from"node:http";import{urlToHttpOptions as e}from"node:url";import o from"node:querystring";import n from"prettier";import c,{existsSync as s}from"node:fs";import i from"node:child_process";function a(t){if("string"!=typeof t)throw Error("文件名请传入字符串格式");return t.startsWith("/")?t.slice(1):t}function l(t){if(!t)return"";const r=t.replace(/([A-Z])/g,"-$1").toLowerCase();return r.startsWith("-")?r.slice(1):r}function u(t){try{const r=JSON.parse(t);if("[object Object]"===Object.prototype.toString.call(r))return!0}catch(t){return!1}return!1}function f(t){const r=Object.create(null);for(let[e,o]of t)r[e]=o;return r}function h(t,r="data"){return`const ${r} = ${JSON.stringify(t,void 0,2)};\n\nexport { ${r} }`}async function p(n){try{return await function(n){const{url:c,method:s="get",data:i={},headers:a={}}=n,l=e(new URL(c)),f=o.stringify(i),h="https:"===l.protocol?t.request:r.request,p={...l,method:s,headers:a};return"[object Object]"===Object.prototype.toString.call(i)&&Object.values(i).length&&Object.assign(p,{search:f}),new Promise(((t,r)=>{const e=h(p,(e=>{e.setEncoding("utf8");let o="";e.on("data",(t=>o+=t)),e.on("end",(()=>{200===e.statusCode&&t(u(o)?JSON.parse(o):o),404===e.statusCode&&r("404 找不到请求的资源");const n=u(o)?JSON.parse(o):o;"[object Object]"===Object.prototype.toString.call(n)&&Object.values(n).length&&r(n.message||n),r(o)}))}));"post"===s&&e.write(f),e.on("error",(t=>{r(t)})),e.end()}))}(n)}catch(t){throw Error(`${(null==t?void 0:t.message)?t.message:t}`)}}function d(t){try{return s(t)}catch(t){throw Error(`[ERROR] ${t}`)}}function m(t,r,e=!1){try{c.existsSync(t)||(c.mkdirSync(t),!e&&t.startsWith("temp")||console.log(`[SUCCESS] 创建 ${t} 文件夹成功`)),r&&r()}catch(r){throw Error(`[ERROR] 创建 ${t} 文件夹失败`)}}function y(t,r,e=!1){try{c.writeFileSync(t,r),!e&&t.startsWith("temp")||console.log(`[SUCCESS] 创建 ${t} 文件成功`)}catch(t){throw Error(`[ERROR] ${t}`)}}function g(t){try{return c.readFileSync(t,{encoding:"utf-8"})}catch(t){throw Error(`[ERROR] ${t}`)}}function S(t,r=!1){const e=t.startsWith("/")?t.slice(1):t;c.unlink(t,(t=>{if(t)throw Error(t.message);r&&console.log(`${e} 文件已删除`)}))}function O(t){if(c.existsSync(t)){c.readdirSync(t).forEach((r=>{const e=`${t}/${r}`;c.statSync(e).isDirectory()?O(e):c.unlinkSync(e)})),c.rmdirSync(t)}}function b(t,r){i.exec(t,((t,e,o)=>{t&&console.log(t.stack),console.log(e),console.log(o),r&&r()}))}async function E(t){const r=g(t);return await n.format(r,{filepath:t,tabWidth:2,useTabs:!1,printWidth:120,singleQuote:!0,semi:!1,trailingComma:"none",bracketSameLine:!0,endOfLine:"lf",htmlWhitespaceSensitivity:"css",vueIndentScriptAndStyle:!0})}export{b as childProcessExec,d as existsPath,a as formatDocName,E as formatPage,y as generateFile,m as generateFolder,l as hump2Line,u as isJson,h as json2moduleContent,f as map2obj,g as readFile,O as removeDir,S as removeFile,p as request};
